version: '3.8'
services:
  app:
    build:
      context: ./
      dockerfile: ./docker/app/Dockerfile
    container_name: app
    restart: always
    hostname: app
    ports:
      - '3000:3000'
    networks:
      - local
  nginx:
    build:
      context: ./
      dockerfile: ./docker/nginx/Dockerfile
    container_name: nginx
    restart: always
    hostname: nginx
    ports:
      - '80:80'
    depends_on:
      - app
    networks:
      - local
<%_ if (db !== 'none' && db === 'postgres') { _%>
  postgres:
    image: kartoza/postgis:latest
    environment:
      POSTGRES_DBNAME: '${DB_DATABASE}'
      POSTGRES_USER: '${DB_USERNAME}'
      POSTGRES_PASS: '${DB_PASSWORD}'
      POSTGRES_MULTIPLE_EXTENSIONS: postgis,hstore,postgis_topology
    container_name: postgres
    restart: always
    hostname: postgres
    ports:
      - '${DB_PORT}:5432'
    networks:
      - local
    volumes:
      - local:/var/lib/postgresql/
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: doctor@tardis.digital
      PGADMIN_DEFAULT_PASSWORD: geronimo
    ports:
      - "8080:80"
<%_ } _%>
<%_ if (db !== 'none' && db === 'mysql') { _%>
  mysql:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_DATABASE: '${DB_DATABASE}'
    container_name: mysql
    restart: always
    hostname: mysql
    ports:
      - '${DB_PORT}:3306'
    networks:
      - local
    volumes:
      - local:/var/lib/mysql
  adminer:
    image: adminer:latest
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    container_name: adminer
    restart: always
    hostname: adminer
    ports:
      - '${DB_ADMINER_PORT}:8080'
    networks:
      - local
<%_ } _%>
<%_ if (db !== 'none') { _%> 
volumes:
  local:
    driver: 'local'
<%_ } _%>
networks:
  local:
    driver: 'bridge'
